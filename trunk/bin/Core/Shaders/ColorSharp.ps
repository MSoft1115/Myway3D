/////////////////////////////////////////////////////////////////////////
//
//
//

struct PS_IN
{
	float2 uv0 : TEXCOORD0;
};

uniform sampler2D gTex;
uniform sampler2D gTex_Depth;

uniform float4 gSharpParam;
uniform float4 gInvTexSize;

float4 main(PS_IN In) : COLOR
{
	float x = gInvTexSize.x;
	float y = gInvTexSize.y;
	float s = gSharpParam.x;
	
	float4 c_orig = tex2D(gTex, In.uv0);
	
	float4 c_blured = 0;

	const float2 filter_detal[8] = {
		float2(-1, -1), float2(0, -1), float2(1, -1),
		float2(-1,  0),                float2(1,  0),
		float2(-1,  1), float2(0,  1), float2(1,  1),
	};

	for (int i = 0; i < 8; ++i)
	{
		c_blured += tex2D(gTex, In.uv0 + filter_detal[i] * gInvTexSize.xy);
	}
	
	c_blured /= 8;

	float depth = tex2D(gTex_Depth, In.uv0).r * 10000;

	float blurWeight = gSharpParam.x * (1 - saturate((depth - gSharpParam.y) * gSharpParam.z));
	
	float4 clr = c_orig + (c_orig - c_blured) * blurWeight;
	clr = saturate(clr);
	clr.a = c_orig.a;
	
	return clr;
}