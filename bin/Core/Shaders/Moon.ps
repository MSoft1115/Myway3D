/////////////////////////////////////////////////////////////////////////
//
//
//

struct PS_IN
{
	float2 uv0 : TEXCOORD0;
};

uniform float4 gMoonParam; // x - phase, y - lum;
uniform sampler2D gMoonTex;

float MoonPhaseFactor(float2 uv, float phase)
{
    float alpha = 1.0;

    float srefx = uv.x - 0.5;
    float refx = abs(uv.x - 0.5);
    float refy = abs(uv.y - 0.5);
    float refxfory = sqrt(0.25 - refy * refy);
    float xmin = -refxfory;
    float xmax = refxfory;
    float xmin1 = (xmax - xmin) * (phase / 2) + xmin;
    float xmin2 = (xmax - xmin) * phase + xmin;
    if (srefx < xmin1) {
        alpha = 0;
    } else if (srefx < xmin2 && xmin1 != xmin2) {
        alpha = (srefx - xmin1) / (xmin2 - xmin1);
    }

    return alpha;
}

float4 main(PS_IN In) : COLOR
{
	const float gMoonPhase = gMoonParam.x;
	const float gMoonLum = gMoonParam.y;

	float4 clr = tex2D(gMoonTex, In.uv0);
	
	float2 uv = In.uv0;
	uv.x = 1 - uv.x;
	float alpha = MoonPhaseFactor(uv, gMoonPhase);

    clr.a = clr.a * alpha * gMoonLum;
    clr.rgb *= 2;

	return clr;
}